1. providers   vs   signer
2. error handling




1.

let provider = new ethers.providers.JsonRpcProvider(network)                        
let signer = new ethers.Wallet(PRIVATE_KEY, provider); 
                      ↓                                               vs                                    ↓
let i = new ethers.Contract(Contract_address,ABI,signer);                              let i = new ethers.Contract(Contract_address,ABI,provider);




provider
        ->  is primarily responsible for querying data from the Ethereum network, 
        ->  read from blockchain

signer    
        ->  has the additional capability to sign transactions and interact with the Ethereum network in a more active manner
        ->  write on blockchain





2.

let a = async()=>
{
    await i.func_1();
}


a().catch((error) => 
{
    console.log("Error aagya ===")
    console.error(error);
});